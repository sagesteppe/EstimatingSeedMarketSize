)
gr <- data.frame(
# only operate on years within the rolling average.
seq(FIRE_YEAR =  min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR))
)
max(test$FIRE_YEAR)
seq(FIRE_YEAR =  min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR))
gr <- data.frame(
# only operate on years within the rolling average.
FIRE_YEAR =  seq(min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR)))
gr <- data.frame(
# only operate on years within the rolling average.
FIRE_YEAR =  seq(min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR)))
gr
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, SE=TRUE, interval = 'prediction', level = lvl)
)
return(mod_pred)
}
pred_help(mod, 0.9)
View(firesYear)
apply(mod[,2:4])
mod[,2:4]
p <- pred_help(mod, 0.9)
apply([modp[,2:4])
apply([p[,2:4])
apply(p[,2:4])
p[,2:4]
apply(p[,2:4], FUN = exp)
apply(p[,2:4], FUN = exp, MARGIN = 1)
apply(p[,2:4], FUN = exp, MARGIN = 2)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p
View(test)
min(test[!is.na(test$roll3), 'FIRE_YEAR']
test[!is.na(test$roll3), 'FIRE_YEAR']
test[!is.na(test$roll3), 'FIRE_YEAR']
test[!is.na(test$roll3), 'TotalArea_Acre']
test[!is.na(test$roll3), 'roll3']
test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p <- pred_help(mod, 0.9)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p
rollAmtBalance <- p$fit - p$rollAmt
p$rollAmtBalance <- p$fit - p$rollAmt
p
p$rollAmtBalancet0 <- p$fit - p$rollAmt
p
p <- pred_help(mod, 0.9)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit - p$rollAmt
p
p$rollAmtBalancet0 <- p$rollAmt - p$fit
p
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, SE=TRUE, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(mod, 0.9)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
gr <- data.frame(
# only operate on years within the rolling average.
FIRE_YEAR =  seq(min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR))
)
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, SE=TRUE, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(mod, 0.9)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
p
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, SE=TRUE, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(mod, 0.95)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(mod, 0.95)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p <- pred_help(modr2, 0.95)
p[,2:4] <- apply(p[,2:4], FUN = exp, MARGIN = 2)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
p <- pred_help(modr2, 0.95)
p
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBalancet0 <- p$fit  - p$rollAmt
p
p$eventAmttBalancet0 <- p$fit  - p$eventAmt
p$eventAmtBalancet0
p$eventAmtBalancet0 <- p$fit  - p$eventAmt
p$fit  - p$eventAmt
p$eventAmtBalancet0
p
p$rollAmtBal.t0 <- p$fit  - p$rollAmt
p$eventAmtBal.t0 <- p$fit  - p$eventAmt
p
p$rollAmtBal.3yr <- data.table::frollmean(p$rollAmtBal.t0, 3)
p$eventAmtBal.3yr <- data.table::frollmean(p$eventAmtBal.t0, 3)
p
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines()
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines()
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
abline(h=0)
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
abline(h=0, col = 'red')
View(p)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
p$rollAmtBal.3yr.dif <-  p$rollAmtBal.t0 - p$rollAmtBal.3yr
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(test$FIRE_YEAR, p$rollAmtBal.3yr.dif)
p$rollAmtBal.3yr.dif
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(test$FIRE_YEAR, p$rollAmtBal.3yr.dif)
test$FIRE_YEAR
p$rollAmtBal.3yr.dif
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(test$FIRE_YEAR, p$rollAmtBal.3yr.dif, na.omit = T)
p$rollAmtBal.3yr.dif
test$FIRE_YEAR
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif)
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif)
abline(modr2, col = 'red')
abline(mod)
p$rollAmtBal.3yr.dif <-  p$rollAmtBal.t0 + p$rollAmtBal.3yr
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif)
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif, col = 'green')
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif), max(test$TotalArea_Acre)))
min(p$rollAmtBal.3yr.dif)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif, col = 'green')
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
#lines(p$FIRE_YEAR, p$rollAmtBal.3yr.dif, col = 'green')
abline(modr2, col = 'red')
abline(mod)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
#lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
abline(mod)
mod <- lm(TotalArea_Acre ~ FIRE_YEAR, data = test)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
#lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
?lag()
lag(1:10, k = 2)
ts <- 1:10
lag(ts, k = 2)
diff(ts, lag = 2)
diff(ts, lag = 2, differences = 1)
ts
diff(1:10, 2, 2)
diff(1:10, 2, 2)
diff(1:10, 2)
1:10
diff(1:10, 1)
diff(1:10, 3)
ts <- sample(0:10)
ts
diff(ts, lag = 2, differences = 1)
diff(ts, lag = 2)
diff(ts, lag = 1)
ts <- sample(0:10)
diff(ts, lag = 2)
diff(ts, lag = 1)
gr <- data.frame(
# only operate on years within the rolling average.
FIRE_YEAR =  seq(min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR))
)
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(modr2, 0.95)
p$rollAmt <- test[!is.na(test$roll3), 'roll3'] # this is the 3 year average amount burned.
p$eventAmt <- test[!is.na(test$roll3), 'TotalArea_Acre'] # this is the observed amount burned.
p$rollAmtBal.t0 <- p$fit  - p$rollAmt
p$eventAmtBal.t0 <- p$fit  - p$eventAmt
p$rollAmtBal.3yr <- data.table::frollmean(p$rollAmtBal.t0, 3)
p$eventAmtBal.3yr <- data.table::frollmean(p$eventAmtBal.t0, 3)
mod <- lm(TotalArea_Acre ~ FIRE_YEAR, data = test)
p$rollAmtBal.3yr.dif <-  p$rollAmtBal.t0 + p$rollAmtBal.3yr
plot(p$FIRE_YEAR, p$rollAmtBal.3yr,
'3 year window ')
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
plot(p$FIRE_YEAR, p$rollAmtBal.3yr,
'3 year window ')
plot(p$FIRE_YEAR, p$rollAmtBal.3yr)
lines(p$FIRE_YEAR, p$rollAmtBal.3yr)
abline(h=0, col = 'red')
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
#lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
View(gr)
View(lcb)
View(test)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40',
ylim = c(min(p$rollAmtBal.3yr.dif, na.rm = T), max(test$TotalArea_Acre)))
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
#lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
firesYear <- read.csv(file.path('..', 'data', 'processed', 'NoFires-TotalArea_byDOIRegion.csv'))
fire_perim <- read.csv(file.path('..', 'data', 'processed', 'FireSizes.csv'))
lcb <- filter(firesYear, REG_NAME == 'Lower Colorado Basin')
avg <- function(x, y){
yname <- paste0('roll', y)
#  x[[yname]] <- log(data.table::frollmean(x$TotalArea_Acre, y))
x[[yname]] <- data.table::frollmean(x$TotalArea_Acre, y)
return(x)
}
test <- avg(lcb, 3)
mod <- lm(log(TotalArea_Acre) ~ FIRE_YEAR, data = test)
plot(test$FIRE_YEAR, log(test$TotalArea_Acre), col = 'grey40')
lines(test$FIRE_YEAR, log(test$TotalArea_Acre), col = 'grey90')
lines(test$FIRE_YEAR, test$roll2)
abline(mod)
modr2 <- lm(roll3 ~ FIRE_YEAR, data = test)
# plot(modr2)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
modr2 <- lm(roll3 ~ FIRE_YEAR, data = test)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
abline(mod)
modr2 <- lm(roll3 ~ FIRE_YEAR, data = test)
plot(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey40')
lines(test$FIRE_YEAR, test$TotalArea_Acre, col = 'grey90')
lines(test$FIRE_YEAR, test$roll3)
abline(modr2, col = 'red')
gr <- data.frame(
# only operate on years within the rolling average.
FIRE_YEAR =  seq(min(test[!is.na(test$roll3), 'FIRE_YEAR']),
max(test$FIRE_YEAR))
)
View(gr)
pred_help <- function(y, lvl){
mod_pred <- data.frame(
FIRE_YEAR = gr,
predict.lm(
y, gr, interval = 'confidence', level = lvl)
)
return(mod_pred)
}
p <- pred_help(modr2, 0.95)
View(p)
View(p)
View(test)
View(test)
test
cbind(test, p$fit)
p$fit
test
left_join(p, test)
left_join(select(p, FIRE_YEAR, fit), test)
test <- left_join(select(p, FIRE_YEAR, fit), test)
test
for (i in seq_along(nrow(test))){
message('ya')
}
seq_along(nrow(test))
for (i in seq_along(1, nrow(test))){
message('ya')
}
seq(along(10))
seq_along(10)
seq_along(1:10)
for (i in seq_along(1:nrow(test))){
message('ya')
}
View(test)
for (i in seq_along(1:nrow(test))){
test$balance <- test$TotalArea_Acre[i] - fit[i]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance <- testc$TotalArea_Acre[i] - testc$fit[i]
}
View(testc)
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$TotalArea_Acre[i] - testc$fit[i]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
}
View(testc)
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$balt_1[i] <- testc$balance[i] - testc$balance[i-1]
}
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$balt_1[i] <- testc$balance[i] - testc$balance[i-1]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$balt_1[i] <- testc$balance[i] - testc$balance[i-1]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] - testc$balance[i-1]
}
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
#  testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- testc$balance[i] + testc$balance[i-1]
#  testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
sum()
subtract()
sub()
?sum
minus()
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
#  testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
View(testc)
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
testc$bal.t2[i] <- testc$balance[i] + testc$balance[i-2]
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
testc$bal.t2[i] <- sum(testc$balance[i] + testc$balance[i-2], na.rm = TRUE)
}
testc <- test
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
testc$bal.t2[i] <- sum(testc$balance[i-1] + testc$balance[i-2], na.rm = TRUE)
}
testc <- test %>%
select(FIRE_YEAR, fit, balance)
testc <- test %>%
select(FIRE_YEAR, fit)
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
testc$bal.t2[i] <- sum(testc$balance[i-1] + testc$balance[i-2], na.rm = TRUE)
}
test
testc <- test %>%
select(FIRE_YEAR, fit, TotalArea_Acre)
for (i in seq_along(1:nrow(test))){
testc$balance[i] <- testc$fit[i] - testc$TotalArea_Acre[i]
testc$bal.t1[i] <- sum(testc$balance[i] + testc$balance[i-1], na.rm = TRUE)
testc$bal.t2[i] <- sum(testc$balance[i-1] + testc$balance[i-2], na.rm = TRUE)
}
