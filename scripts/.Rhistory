estimate = return_ls[,2],
upperCI = return_ls[,3]
)
ret_period <-seq(1.1, 99, 0.1) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
#Find the intersection of the desired value and the generated sequence of return levels
return_ls <- data.frame(
period = 1 - (ret_period/100),
lowerCI = return_ls[,1],
estimate = return_ls[,2],
upperCI = return_ls[,3]
)
return_ls <- data.frame(
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
ret_period <-seq(1.1, 99, 0.1) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
#Find the intersection of the desired value and the generated sequence of return levels
return_ls <- data.frame(
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
View(return_ls)
ret_period <-seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
ret_period <-seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
?sample
sample(1:nrow(return_ls), prob = return_ls$Pr)
sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100)
return_ls$Pr
positions <- sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100)
positions
return_ls[positions,]
sort(return_ls[positions,'estimate'])
sort(return_ls[positions,'Pr'])
positions <- sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE)
sort(return_ls[positions,'Pr'])
hist( sort(return_ls[positions,'Pr']) )
1:nrow(return_ls)
?sample
positions
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
xlim = c(2, max(return_ls$period))
)
plot(
return_ls$period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
xlim = c(2, max(return_ls$period))
)
plot(
return_ls$period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
return_ls$estimate
return_ls$period
plot(
return_ls$Pr, return_ls$estimate, type = 'l',
#ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
plot(
-return_ls$Pr, return_ls$estimate, type = 'l',
#ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
plot(
-return_ls$Pr, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
plot(
-return_ls$Pr, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
# xlim = c(2, max(return_ls$period))
)
plot(
return_ls$Pr, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
# xlim = c(2, max(return_ls$period))
)
plot(
return_ls$Pr, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
plot(
return_ls$Pr, return_ls$estimate, type = 'l'#,
# ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
# xlim = c(2, max(return_ls$period))
)
hist( sort(return_ls[positions,'Pr']) )
ret_period <-seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
#Find the intersection of the desired value and the generated sequence of return levels
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
plot(
return_ls$Pr, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
xlim = c(2, max(return_ls$period))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
xlim = c(2, max(return_ls$period))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI)),
xlim = c(2, max(return_ls$Period))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
)
return_ls$Period
return_ls$estimate
plot(
return_ls$Period, return_ls$estimate, type = 'l'#,
# ylim = c(min(return_ls$lowerCI), max(return_ls$upperCI))
)
return_ls$lowerCI
View(return_ls)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwerCI), max(return_ls$uprCI))
)
min(return_ls$lwerCI)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
return_ls$uprCI
max(return_ls$uprCI)
min(return_ls$lwrCI)
ret_period <-seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
return_ls$estimate
return_ls$Period
return_ls$estimate
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
return_ls$lwrCI
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
View(return_ls)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$upperCI, lty = 2)
lines(return_ls$period, return_ls$lowerCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$upperCI, lty = 2)
return_ls$upperCI
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
return_ls$uprCI
return_ls$lwrCI
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
uprCI
return_ls$uprCI
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
ret_period
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)+
lines(return_ls$period, return_ls$uprCI, lty = 2)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
#Find the intersection of the desired value and the generated sequence of return levels
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 100, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
return_ls$uprCI
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
points(return_ls$period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
points(return_ls$Period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$Period, return_ls$uprCI, lty = 2)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$Period, return_ls$uprCI, lty = 2)
lines(return_ls$Period, return_ls$lwrCI, lty = 2)
1:nrow(return_ls)
hist( sort(return_ls[positions,'Pr']) )
positions <- sort(sample(1:nrow(return_ls), prob = return_ls$Pr, size = 1000, replace = TRUE))
hist( sort(return_ls[positions,'Pr']) )
density( sort(return_ls[positions,'Pr']) )
plot(density( sort(return_ls[positions,'Pr']) ))
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$Period, return_ls$uprCI, lty = 2)
lines(return_ls$Period, return_ls$lwrCI, lty = 2)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
#Find the intersection of the desired value and the generated sequence of return levels
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
return_ls[,2:4] <- apply(return_ls[,2:4], 2, exp)
positions <- sort( # sampling rows from the data frame based on the return intervals
sample(1:nrow(return_ls),
prob = return_ls$Pr,
size = 1000, replace = TRUE))
plot(density( sort(return_ls[positions,'Pr']) ))
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$Period, return_ls$uprCI, lty = 2)
lines(return_ls$Period, return_ls$lwrCI, lty = 2)
ret_period <- seq(1.1, 99, 0.01) # 'years' for the return intervals.
return_ls <- return.level(ak_ext, ret_period, do.ci = TRUE, burn.in = 100)
return_ls <- data.frame(
Period = ret_period,
Pr = 1 - (ret_period/100),
lwrCI = return_ls[,1],
estimate = return_ls[,2],
uprCI = return_ls[,3]
)
positions <- sort( # sampling rows from the data frame based on the return intervals
sample(1:nrow(return_ls),
prob = return_ls$Pr,
size = 1000, replace = TRUE))
plot(density( sort(return_ls[positions,'Pr']) ))
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
plot(
return_ls$Period, return_ls$estimate, type = 'l',
ylim = c(min(return_ls$lwrCI), max(return_ls$uprCI))
)
lines(return_ls$Period, return_ls$uprCI, lty = 2)
lines(return_ls$Period, return_ls$lwrCI, lty = 2)
ak <- filter(annual, REG_NAME == 'California-Great Basin' & NoFire > 0)
plot(ak$FIRE_YEAR, ak$TotalArea_Acre)
annual <- read.csv('../data/processed/NoFires-TotalArea_byDOIRegion.csv')
View(annual)
ak <- filter(annual, REG_NAME == 'Mississipii Basin' & NoFire > 0)
plot(ak$FIRE_YEAR, ak$TotalArea_Acre)
ak_ext <- fevd(
log(ak$TotalArea_Acre),
type = 'GEV',
units ='Acres',
span = length(ak$TotalArea_Acre),
time.units = '1/year')
ak <- filter(annual, REG_NAME == 'Mississippi Basin' & NoFire > 0)
plot(ak$FIRE_YEAR, ak$TotalArea_Acre)
ak_ext <- fevd(
log(ak$TotalArea_Acre),
type = 'GEV',
units ='Acres',
span = length(ak$TotalArea_Acre),
time.units = '1/year')
plot(ak_ext)
ob <- ci(ak_ext, type = "parameter", method = 'boot')
ob <- ci(ak_ext, type = "parameter", method = 'boot')
ob1 <- ci(ak_ext, type = "return.level", method = "proflik",
xrange = c(10, 20), verbose = TRUE) # these are used on values we have not predicted yet..
